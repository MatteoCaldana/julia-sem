import numpy as np
import scipy.linalg as la
import scipy.sparse as sp
import scipy
import core.lgl

rhs = np.array([-2.8276026297109459e+07, 6.8043622870539576e+07, -8.4975059435677379e+07, 9.1528926791396871e+07, -9.0483284150750279e+07, 8.3580753898457900e+07, -7.1711786642669007e+07, 5.4285317589408241e+07, -2.1992464897751804e+07])
mat = np.array([1.2166666666666670e+01, 1.0854767430508360e+01, -8.0626917895510601e+00, 5.0612741637248915e+00, -3.4539682539682541e+00, 2.4851565991805020e+00, -1.8123514052987184e+00, 1.2472576998487617e+00, -9.8611111111111116e-01, 1.0854767430508360e+01, 2.0856865663261214e+01, -8.6056713633258042e+00, 1.6628871603055995e+00, -6.1257907042664450e-01, 3.0026773943897467e-01, -1.7143204722317201e-01, 1.0221259190548693e-01, 1.2472576998487617e+00, -8.0626917895510601e+00, -8.6056713633258042e+00, 1.2169746960388792e+01, -6.2530078205037709e+00, 1.3928558300633131e+00, -5.6992575485964048e-01, 2.9933485965150763e-01, -1.7143204722317207e-01, -1.8123514052987186e+00, 5.0612741637248915e+00, 1.6628871603055995e+00, -6.2530078205037709e+00, 9.5770608457378490e+00, -5.4416826553282833e+00, 1.3136793058126219e+00, -5.6992575485964037e-01, 3.0026773943897478e-01, 2.4851565991805016e+00, -3.4539682539682541e+00, -6.1257907042664450e-01, 1.3928558300633131e+00, -5.4416826553282833e+00, 8.9164625850340151e+00, -5.4416826553282824e+00, 1.3928558300633131e+00, -6.1257907042664428e-01, -3.4539682539682537e+00, 2.4851565991805020e+00, 3.0026773943897467e-01, -5.6992575485964048e-01, 1.3136793058126219e+00, -5.4416826553282824e+00, 9.5770608457378525e+00, -6.2530078205037709e+00, 1.6628871603055995e+00, 5.0612741637248906e+00, -1.8123514052987184e+00, -1.7143204722317201e-01, 2.9933485965150763e-01, -5.6992575485964037e-01, 1.3928558300633131e+00, -6.2530078205037709e+00, 1.2169746960388789e+01, -8.6056713633258042e+00, -8.0626917895510601e+00, 1.2472576998487617e+00, 1.0221259190548693e-01, -1.7143204722317207e-01, 3.0026773943897478e-01, -6.1257907042664428e-01, 1.6628871603055995e+00, -8.6056713633258042e+00, 2.0856865663261217e+01, 1.0854767430508359e+01, -9.8611111111111116e-01, 1.2472576998487617e+00, -1.8123514052987186e+00, 2.4851565991805016e+00, -3.4539682539682537e+00, 5.0612741637248906e+00, -8.0626917895510601e+00, 1.0854767430508359e+01, 1.2166666666666668e+01])
mat = mat.reshape((9, 9))

rhs = np.zeros(9)
rhs[0] = 1
mat[0, :] = np.zeros((1, mat.shape[1]))
mat[0,0] = 1
print(mat)
sol = la.solve(mat, rhs)
print('err', la.norm(np.dot(mat, sol)-rhs) / la.norm(rhs))
print(sol)

# N = 8
# poly = scipy.special.legendre(N)
# x = core.lgl.lglnodes(N)
# w = (2. / (N*(N+1))) / (np.polyval(poly, x)**2)
# D = np.zeros((N+1, N+1))
# for j in range(N+1):
#    lnxj = np.polyval(poly, x[j])   
#    for i in range(N+1):       
#       if i != j:         
#          lnxi = np.polyval(poly, x[i])   
#          D[i, j] = lnxi/((x[i]-x[j])*lnxj);                 

# D[0, 0] = -0.25*N*(N+1); 
# D[-1, -1] = -D[0, 0] 

# A = np.zeros((N+1, N+1))
# for i in range(N+1):
#   for j in range(N+1):
#     for k in range(N+1):
#       A[i, j] += w[k] * D[k, i] * D[k, j]

# print(A)
